---
import type { tTodaySchedToBlockMapRes } from '@lib/format';
import {
	bloqueActivo,
	bloques,
	obtenerBloqueActual,
	type tBloques,
} from '@lib/time';
import Block from './Block.astro';

interface Props {
	schedule: tTodaySchedToBlockMapRes;
}
const schedule = Astro.props.schedule as tTodaySchedToBlockMapRes;
const actual_block = obtenerBloqueActual(new Date()) as tBloques;
---

{
	!!Array(schedule.keys()).length && (
		<ul class="timeline timeline-vertical *:ml-[-90%]">
			{bloques.map((bloque) => {
				const scheduleBlock = schedule.get(bloque);
				return (
					<Block
						sched={scheduleBlock}
						block={bloque}
						activo={bloqueActivo(actual_block, bloque)}
					/>
				);
			})}
		</ul>
	)
}
{
	!Array(schedule.keys()).length && (
		<h1 class="text-gray-500 text-2xl p-20">Nada para hoy ðŸ˜„</h1>
	)
}
